% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transition_matrix.R
\name{get_transition}
\alias{get_transition}
\alias{get_transition.matrix}
\alias{get_transition.dgTMatrix}
\alias{get_transition.dgCMatrix}
\alias{get_transition.sparseMatrix}
\alias{get_transition.default}
\title{Compute a transition matrix from an adjacency matrix.}
\usage{
get_transition(adj, directed = NULL, ...)

\method{get_transition}{matrix}(adj, directed = NULL, ...)

\method{get_transition}{dgTMatrix}(adj, directed = NULL, ...)

\method{get_transition}{dgCMatrix}(adj, directed = NULL, ...)

\method{get_transition}{sparseMatrix}(adj, directed = NULL, ...)

\method{get_transition}{default}(adj, directed = NULL, ...)
}
\arguments{
\item{adj}{adjacency matrix, either dense or sparse}

\item{directed}{boolean, optional argument specifying if the matrix refers to
a directed graph.}

\item{...}{additional parameters to and from the main method. Currently not
used.}
}
\value{
A transition matrix in the same format of `adj`.
}
\description{
This method take an adjacency matric (dense or sparse), and returns the
corresponding transition matrix in the same format. If the optional argument
`directed` is specified to be FALSE, then before computing the transition
matrix the adjacency matrix is forced be symmetric.
}
\examples{
el <- data.frame(from= c('a','b','b','c','d','d'),
                to  = c('b','c','d','a','b','a'),
                attr= c( 12, 6, 12 , 6 , 6 , 6 ))
adj <- el2adj(el)
t_mat <- get_transition(adj)
}
